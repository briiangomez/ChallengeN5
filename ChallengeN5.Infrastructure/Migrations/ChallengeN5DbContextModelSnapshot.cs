// <auto-generated />
using System;
using ChallengeN5.Infrastructure.Context.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChallengeN5.Infrastructure.Migrations
{
    [DbContext(typeof(ChallengeN5DbContext))]
    partial class ChallengeN5DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChallengeN5.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7d2c1a5-30dd-4595-a76f-210e0d0c40e3"),
                            Email = "brian.gomez@hotmail.com",
                            LastName = "Gomez",
                            Name = "Brian",
                            PhoneNumber = "1111-2222"
                        },
                        new
                        {
                            Id = new Guid("86e24b01-f323-49a0-bc88-3f8eb487e561"),
                            Email = "john.doe@hotmail.com",
                            LastName = "Dow",
                            Name = "John",
                            PhoneNumber = "1111-2222"
                        });
                });

            modelBuilder.Entity("ChallengeN5.Domain.Entities.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("ChallengeN5.Domain.Entities.PermissionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0c56bc0-1e39-4ee8-bf8a-1860f7a9a281"),
                            Name = "Read-Only Access"
                        },
                        new
                        {
                            Id = new Guid("d4b6e31c-85df-4dbb-bdeb-708fb0a2b65e"),
                            Name = "Delete Access"
                        },
                        new
                        {
                            Id = new Guid("47bf298e-4f5e-45ba-95e9-3fcbb818ecba"),
                            Name = "Create Access"
                        },
                        new
                        {
                            Id = new Guid("3f7aab9e-739f-4e95-b660-4d652ee45029"),
                            Name = "Edit Access"
                        });
                });

            modelBuilder.Entity("ChallengeN5.Domain.Entities.Permission", b =>
                {
                    b.HasOne("ChallengeN5.Domain.Entities.Employee", "Employee")
                        .WithMany("Permissions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChallengeN5.Domain.Entities.PermissionType", "PermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("ChallengeN5.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
